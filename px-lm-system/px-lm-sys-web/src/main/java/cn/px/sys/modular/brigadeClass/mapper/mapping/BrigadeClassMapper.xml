<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.px.sys.modular.brigadeClass.mapper.BrigadeClassMapper">

    <resultMap type="cn.px.sys.modular.brigadeClass.entity.BrigadeClassEntity" id="BrigadeClassMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="enable" column="enable" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="OTHER"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="selectBrigadeClassVo">
        select id, enable, create_by, create_time, update_by, update_time, remark, sort, name from brigade_class
    </sql>

    <select id="selectIdPage" resultType="java.lang.Long">
        SELECT id FROM brigade_class
        <where>
            enable = 1
            <if test="cm.id != null">
                and id = #{cm.id}
            </if>
            <if test="cm.enable != null">
                and enable = #{cm.enable}
            </if>
            <if test="cm.createBy != null">
                and create_by = #{cm.createBy}
            </if>
            <if test="cm.createTime != null">
                and create_time = #{cm.createTime}
            </if>
            <if test="cm.updateBy != null">
                and update_by = #{cm.updateBy}
            </if>
            <if test="cm.updateTime != null">
                and update_time = #{cm.updateTime}
            </if>
            <if test="cm.remark != null">
                and remark = #{cm.remark}
            </if>
            <if test="cm.sort != null">
                and sort = #{cm.sort}
            </if>
            <if test="cm.name != null and cm.name != ''">
                and name = #{cm.name}
            </if>
        </where>
    </select>


    <select id="selectList" resultType="map">
        select  id,name from
        brigade_class where enable = 1
    </select>


    <select id="getNameByList" resultType="java.lang.String">
        select group_concat(name) from brigade_class
        where id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>


    <select id="selectPage" resultType="map">
        SELECT c.*,us.avatar from (
            SELECT a.user_name,a.user_phone,a.user_id,a.brigade_class,a.community_class from cadres_reports a where a.enable=1
            union all
        SELECT b.user_name,b.user_phone,b.user_id,b.brigade_class,b.community_class from volunteers_reports b where b.enable=1
        )c
        LEFT JOIN all_user us  on c.user_id = us.id
        <where>
            <if test="entity.brigadeClass!=null">
                and c.brigade_class like concat(concat('%',#{entity.brigadeClass},'%'))
            </if>
            <if test="entity.realName !=null and entity.realName !=''">
                and c.user_name like concat(concat('%',#{entity.realName},'%'))
            </if>
            <if test="entity.phone !=null and entity.phone !=''">
                and c.user_phone like concat(concat('%',#{entity.phone},'%'))
            </if>
            <if test="entity.communityClass !=null and entity.communityClass !=''">
                and c.community_class = #{entity.communityClass}
            </if>


        </where>
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        SELECT count(1) from (
        SELECT a.user_name,a.user_phone,a.user_id,a.brigade_class,a.community_class from cadres_reports a where a.enable=1
        union all
        SELECT b.user_name,b.user_phone,b.user_id,b.brigade_class,b.community_class from volunteers_reports b where b.enable=1
        )c
        LEFT JOIN all_user us  on c.user_id = us.id
        <where>
            <if test="entity.brigadeClass!=null">
                and c.brigade_class like concat(concat('%',#{entity.brigadeClass},'%'))
            </if>
            <if test="entity.realName !=null and entity.realName !=''">
                and c.user_name like concat(concat('%',#{entity.realName},'%'))
            </if>
            <if test="entity.phone !=null and entity.phone !=''">
                and c.user_phone like concat(concat('%',#{entity.phone},'%'))
            </if>
            <if test="entity.communityClass !=null and entity.communityClass !=''">
                and c.community_class = #{entity.communityClass}
            </if>
        </where>
    </select>

</mapper>