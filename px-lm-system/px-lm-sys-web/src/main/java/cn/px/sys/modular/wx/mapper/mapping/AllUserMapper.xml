<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.px.sys.modular.wx.mapper.AllUserMapper">

    <resultMap type="cn.px.sys.modular.wx.entity.AllUserEntity" id="AllUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="enable" column="enable" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="OTHER"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="OTHER"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="gridClass" column="grid_class" jdbcType="INTEGER"/>
        <result property="identity" column="identity" jdbcType="INTEGER"/>
        <result property="userType" column="user_type" jdbcType="INTEGER"/>

    </resultMap>

    <sql id="selectAllUserVo">
        select id, enable, create_by as "createBy",
         grid_class as "gridClass",
         create_time as "createTime", update_by as "updateBy", update_time as "updateTime", remark, sort, address, avatar, nickname, openid, phone, type,integral,status,points_consumption as "pointsConsumption",remaining_points as "remainingPoints",identity from all_user
    </sql>

    <select id="selectIdPage" resultType="java.lang.Long">
        SELECT id FROM all_user
        <where>
            enable = 1
            <if test="cm.id != null">
                and id = #{cm.id}
            </if>
            <if test="cm.enable != null">
                and enable = #{cm.enable}
            </if>
            <if test="cm.createBy != null">
                and create_by = #{cm.createBy}
            </if>
            <if test="cm.createTime != null">
                and create_time = #{cm.createTime}
            </if>
            <if test="cm.updateBy != null">
                and update_by = #{cm.updateBy}
            </if>
            <if test="cm.updateTime != null">
                and update_time = #{cm.updateTime}
            </if>
            <if test="cm.remark != null">
                and remark = #{cm.remark}
            </if>
            <if test="cm.sort != null">
                and sort = #{cm.sort}
            </if>
            <if test="cm.address != null and cm.address != ''">
                and address = #{cm.address}
            </if>
            <if test="cm.avatar != null">
                and avatar = #{cm.avatar}
            </if>
            <if test="cm.nickname != null and cm.nickname != ''">
                and nickname = #{cm.nickname}
            </if>
            <if test="cm.openid != null and cm.openid != ''">
                and openid = #{cm.openid}
            </if>
            <if test="cm.phone != null and cm.phone != ''">
                and phone = #{cm.phone}
            </if>
            <if test="cm.type != null">
                and type = #{cm.type}
            </if>
            <if test="cm.identity != null">
                and identity = #{cm.identity}
            </if>
            <if test="cm.userType != null">
                and identity = #{cm.userType}
            </if>
        </where>
    </select>

    <select id="readByOpenid" resultType="cn.px.sys.modular.wx.entity.AllUserEntity">
       <include refid="selectAllUserVo"/>
        where enable = 1 and openid = #{openid}
    </select>

    <select id="getAllUserEntityByType" resultType="map">
        select id, address, avatar, nickname, openid, phone, type,integral,status,points_consumption as "pointsConsumption",remaining_points as "remainingPoints",identity from all_user
        where enable = 1 and type = 2
    </select>

    <select id="getAllUserEntityByType1" resultType="cn.px.sys.modular.wx.entity.AllUserEntity">
        select id, address, avatar, nickname, openid, phone, type,integral,status,points_consumption as "pointsConsumption",remaining_points as "remainingPoints",identity from all_user
        where enable = 1 and type = 2
    </select>

    <select id="getListUser" resultType="map">

        SELECT au.id as "userId",au.avatar,au.nickname,au.type FROM all_user au LEFT JOIN unit u ON u.user_id = au.id
   <where>
       au.type is NOT null
        <if test="userType==2">
            and au.type = 2
        </if>
       <if test="userType==3">
           and au.type = 3
           and u.id = #{uid}
       </if>
       <if test="userIds != null and userIds != ''">
           and au.id not IN (${userIds})

       </if>
       <if test="nickname != null and nickname != ''">
           and au.nickname like CONCAT('%',#{nickname},'%')
       </if>
   </where>
    </select>

    <select id="getUserIds" resultType="cn.px.sys.modular.wx.entity.AllUserEntity">
        SELECT au.id FROM all_user au LEFT JOIN activity_user_sign aus ON au.id = aus.user_id where
          aus.activity_id = #{activeId}
    </select>

    <select id="getUserIds1" resultType="cn.px.sys.modular.wx.entity.AllUserEntity">
        SELECT au.id FROM all_user au LEFT JOIN project_user_sign pus ON au.id = pus.user_id where
          pus.project_id = #{pid}
    </select>
</mapper>