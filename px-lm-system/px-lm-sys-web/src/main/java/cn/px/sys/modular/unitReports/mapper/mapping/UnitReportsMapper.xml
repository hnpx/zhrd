<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.px.sys.modular.unitReports.mapper.UnitReportsMapper">

    <resultMap type="cn.px.sys.modular.unitReports.entity.UnitReportsEntity" id="UnitReportsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="enable" column="enable" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="OTHER"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="firstId" column="first_id" jdbcType="INTEGER"/>
        <result property="secondId" column="second_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
        <result property="userAddress" column="user_address" jdbcType="VARCHAR"/>
        <result property="resources" column="resources" jdbcType="VARCHAR"/>
        <result property="communityClass" column="community_class" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="selectUnitReportsVo">
        select id, enable, create_by, create_time, community_class,update_by, update_time, remark, sort, first_id, second_id, user_name, user_phone, user_address, resources from unit_reports
    </sql>

    <select id="selectIdPage" resultType="java.lang.Long">
        SELECT id FROM unit_reports
        <where>
            enable = 1
            <if test="cm.id != null">
                and id = #{cm.id}
            </if>
            <if test="cm.enable != null">
                and enable = #{cm.enable}
            </if>
            <if test="cm.createBy != null">
                and create_by = #{cm.createBy}
            </if>
            <if test="cm.createTime != null">
                and create_time = #{cm.createTime}
            </if>
            <if test="cm.updateBy != null">
                and update_by = #{cm.updateBy}
            </if>
            <if test="cm.updateTime != null">
                and update_time = #{cm.updateTime}
            </if>
            <if test="cm.remark != null">
                and remark = #{cm.remark}
            </if>
            <if test="cm.sort != null">
                and sort = #{cm.sort}
            </if>
            <if test="cm.firstId != null">
                and first_id = #{cm.firstId}
            </if>
            <if test="cm.secondId != null">
                and second_id = #{cm.secondId}
            </if>
            <if test="cm.userName != null and cm.userName != ''">
                and user_name = #{cm.userName}
            </if>
            <if test="cm.userPhone != null and cm.userPhone != ''">
                and user_phone = #{cm.userPhone}
            </if>
            <if test="cm.userAddress != null and cm.userAddress != ''">
                and user_address = #{cm.userAddress}
            </if>
            <if test="cm.resources != null and cm.resources != ''">
                and resources = #{cm.resources}
            </if>
            <if test="cm.communityClass != null and cm.communityClass != ''">
                and community_class = #{cm.communityClass}
            </if>
            <if test="cm.userId != null and cm.userId != ''">
                and user_id = #{cm.userId}
            </if>
        </where>
    </select>


    <select id="selectListPage" resultType="map">
        SELECT a.*,
        b.name as firsName,
        c.name as secondName,
        us.remaining_points as integral,
        us.grid_class as gridClass
        from unit_reports a
        LEFT JOIN unit_first_class b  on a.first_id = b.id
        LEFT JOIN unit_second_class c on a.second_id = c.id
        LEFT join all_user us on a.user_id = us.id
        <where>
            <if test="entity.firstId !=null">
                and a.first_id = #{entity.firstId}
            </if>
            <if test="entity.userName !=null">
                and a.user_name like concat(concat('%',#{entity.userName},'%'))
            </if>
            <if test="entity.userPhone !=null">
                and a.user_phone like concat(concat('%',#{entity.userPhone},'%'))
            </if>

            <if test="entity.secondName != null and entity.secondName != ''">
                and c.name like CONCAT('%',#{entity.secondName},'%')
            </if>

            <if test="entity.communityClass !=null and entity.communityClass !='' ">
                and a.community_class  = #{entity.communityClass}
            </if>
            <if test="entity.userId !=null">
                and a.user_id  = #{entity.userId}
            </if>
            and a.`enable` =1
        </where>
        ORDER BY us.remaining_points desc
    </select>



    <select id="getCount" resultType="java.lang.Integer">
    SELECT count(1)  from unit_reports a
    LEFT JOIN unit_second_class b  on a.second_id = b.id
    WHERE a.`enable` = 1
    </select>
    <select id="getAllById" resultType="map">

    SELECT a.create_time,b.name  from unit_reports a
    LEFT JOIN unit_second_class b  on a.second_id = b.id
    WHERE a.`enable` = 1
    ORDER BY a.create_time

    </select>


    <select id="getList" resultType="cn.px.sys.modular.unitReports.entity.UnitReportsEntity">
        select
    </select>

    <select id="getEntityByUser" resultType="cn.px.sys.modular.unitReports.entity.UnitReportsEntity">
        select * from unit_reports where enable = 1 and user_id = #{userId}
    </select>

    <select id="getCountByall" resultType="int">
        select count(1) from unit_reports where enable=1
    </select>



</mapper>